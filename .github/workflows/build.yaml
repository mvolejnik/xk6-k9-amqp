name: build

# Builds xk6-k9-amqp extension from 'master' or branch to test build

env:
  XK6_VERSION: "latest"
  K6_VERSION: "latest"

on:
  push:
    branches:
      - master
  pull_request:
    branches: [ "master" ]
    types:
      - opened
      - synchronize
      - ready_for_review

jobs:
  build-k6:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.3'
          check-latest: true
          cache-dependency-path: go.sum
      - name: xk6 build
        run: >
          docker run 
          --rm 
          -v "${PWD}:/github/workspace" 
          -w /github/workspace 
          -u $(id -u):$(id -g) 
          grafana/xk6:${XK6_VERSION}
          build ${K6_VERSION} --with xk6-k9-amqp=.
      - name: Verify k6 binary
        run: ./k6 version
      - name: Upload k6 artifact
        uses: actions/upload-artifact@v4
        with:
          name: k6
          path: k6
          retention-days: 1
  build-docker:
    runs-on: ubuntu-latest
    needs: [build-k6]
    outputs:
      tag: ${{ steps.set-image-name.outputs.tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download k6 artifact
        uses: actions/download-artifact@v4
        with:
          name: k6
          path: .
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Copy k6 binary
        run: cp ./k6 docker/k6-test/
      - name: Set dynamic image name
        id: set-image-name
        run: echo "tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Build Docker Compose services
        run: TAG=${{ steps.set-image-name.outputs.tag || 'latest' }} docker compose -f ./docker/k6-test/docker-compose.yaml build
      - name: Save Docker image to tar
        run: docker save k6:${{ steps.set-image-name.outputs.tag || 'latest' }} -o k6-image.tar
      - name: Upload k6 image artifact
        uses: actions/upload-artifact@v4
        with:
          name: k6-image
          path: k6-image.tar
          retention-days: 1
  test:
    runs-on: ubuntu-latest
    needs: ["build-docker"]
    env:
      TAG: ${{ needs.build-docker.outputs.tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download k6 image artifact
        uses: actions/download-artifact@v4
        with:
          name: k6-image
          path: .
      - name: Load Docker image from tar
        run: docker load -i k6-image.tar
      - name: Copy test files
        run: cp examples/*.js docker/k6-test
      - name: Up Docker Compose services
        run: docker compose -f ./docker/k6-test/docker-compose.yaml up -d
      - name: ps Docker Compose
        run: docker compose -f ./docker/k6-test/docker-compose.yaml ps
      - name: Run k6 AMQP test
        run: docker compose -f ./docker/k6-test/docker-compose.yaml exec k6 /usr/bin/k6 run /home/k6/simple.js
      - name: Tear down Docker Compose services
        if: always()
        run: docker compose -f ./docker/k6-test/docker-compose.yaml down